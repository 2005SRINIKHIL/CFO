from flask import Flask, request, jsonify, render_template
import os
from dotenv import load_dotenv

# Load .env
load_dotenv()
PATHWAY_API_KEY = os.getenv("PATHWAY_API_KEY")

app = Flask(__name__)

# Example company data (for testing)
company_data = {
    "revenue": 500000,
    "expenses": 300000,
    "employees": 10,
    "marketing_budget": 50000,
    "product_price": 1000
}

@app.route("/")
def index():
    return render_template("index.html")  # simple input form for scenario

@app.route("/forecast", methods=["POST"])
def forecast():
    data = request.get_json()
    user_scenario = data.get("scenario", "")

    # ----- MOCK PATHWAY RESPONSE -----
    # For now we simulate Pathway insights
    # In the future, replace this with a real API request to Pathway
    additional_hires = 0
    extra_marketing = 0
    price_increase_pct = 0.0

    # Simple parsing from the scenario text (demo purpose)
    if "hire" in user_scenario.lower():
        import re
        hires = re.findall(r"hire (\d+)", user_scenario.lower())
        if hires:
            additional_hires = int(hires[0])
    if "marketing" in user_scenario.lower():
        marketing = re.findall(r"₹([\d,]+)", user_scenario.replace(",", ""))
        if marketing:
            extra_marketing = int(marketing[0])
    if "price" in user_scenario.lower():
        price_pct = re.findall(r"(\d+)%", user_scenario)
        if price_pct:
            price_increase_pct = int(price_pct[0]) / 100

    # Compute new forecast
    new_revenue = company_data["revenue"] * (1 + price_increase_pct)
    new_expenses = company_data["expenses"] + (additional_hires * 50000) + extra_marketing
    net_profit = new_revenue - new_expenses

    insights = {
        "recommendation": f"Hiring {additional_hires} engineers and spending ₹{extra_marketing} on marketing with {price_increase_pct*100}% price increase results in net profit of ₹{net_profit}.",
        "forecast": {
            "revenue": new_revenue,
            "expenses": new_expenses,
            "net_profit": net_profit
        }
    }

    return jsonify(insights)


if __name__ == "__main__":
    app.run(debug=True)
